#!/bin/bash

# cluster: kind

# create a pod for votingapp with run and export yaml
kubectl create namespace votingapp
kubectl run votingapp --generator=run-pod/v1 --image=votingapp
kubectl get pods votingapp -o yaml > k8s/votingapp.yaml

# make a request from other pod or from the node (ssh into machine)
minikube ssh
kubectl run test --generator=run-pod/v1 --image=paulopez/kurl -- sleep infinity
votingapp_ip=$(kubectl get pods votingapp -o wide --no-headers | awk '{ print $6}')
kubectl exec -it test -- curl http://$votingapp_ip:5000
kubectl run test \
    --generator=run-pod/v1 \
    --image=paulopez/votingapp-test:alpine \
    --restart=Never \
    --env VOTING_URL=http://$votingapp_ip:5000

# run the test removing the pod after completion
kubectl run test \
    --generator=run-pod/v1 \
    --image=paulopez/votingapp-test:alpine \
    --restart=Never \
    --env VOTING_URL=http://$votingapp_ip:5000 \
    --rm --attach

# test the solution using kind (with more than one worker node)
kind create cluster --config kind/kind.yaml

# expose a pod with a service (clusterIP)
kubectl expose pod votingapp --port 8080 --target-port 5000
service_ip=$(kubectl get svc votingapp -o wide --no-headers | awk '{ print $3}')
kubectl run test \
    --generator=run-pod/v1 \
    --image=paulopez/votingapp-test:alpine \
    --restart=Never \
    --env VOTING_URL=http://$service_ip:8080\
    --rm --attach

# update labels and check service endpoints
kubectl label pod votingapp run=votingapp-beta --overwrite
kubectl label pod votingapp run=votingapp --overwrite

# find coredns pods
kubectl get pods -l k8s-app=kube-dns --all-namespaces -L k8s-app

# poor service DNS as env variables
k exec -it votingapp -- env | grep VOTINGAPP

# endpoints and readiness probe
kubectl get endpoints --watch
kubectl label pod votingapp run=votingapp-beta --overwrite
kubectl label pod votingapp run=votingapp --overwrite
kubectl apply -f k8s/votingapp-rs.yaml

# what is really a service?
# connect to a k8s worker and check iptables rules
docker exec -it kind-worker bash  
iptables -t nat -L | grep votingapp


# deploy nginx ingress controller
# https://kubernetes.github.io/ingress-nginx/deploy/
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/mandatory.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/provider/cloud-generic.yaml

kubectl apply -f k8s/votingapp-ingress.yaml
curl -H "Host: votingapp.io" localhost

# check autogenerated nginx.conf file
kubectl exec -it  -n ingress-nginx $ingress_pod -- bash -c "cat /etc/nginx/nginx.conf | grep votingapp"

# deploy traefik ingress controller
# https://docs.traefik.io/v1.7/user-guide/kubernetes/ 

kubectl apply -f https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-rbac.yaml
kubectl apply -f https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/traefik-deployment.yaml
kubectl apply -f https://raw.githubusercontent.com/containous/traefik/v1.7/examples/k8s/ui.yaml
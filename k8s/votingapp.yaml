apiVersion: v1
kind: Namespace
metadata:
  name: votingapp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: myvotingapp
  name: myvotingapp
  namespace: votingapp
spec:
  replicas: 2
  selector:
    matchLabels:
      run: myvotingapp
  template:
    metadata:
      labels:
        run: myvotingapp
    spec:
      containers:
        - env:
            - name: REDIS
              value: myredis:6379
          image: paulopez/votingapp:0.1
          name: myvotingapp
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: myvotingapp
  name: myvotingapp
  namespace: votingapp
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    run: myvotingapp
  # type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  generation: 1
  labels:
    run: myredis
  name: myredis
  namespace: votingapp
spec:
  replicas: 1
  selector:
    matchLabels:
      run: myredis
  template:
    metadata:
      labels:
        run: myredis
    spec:
      containers:
        - image: redis
          name: myredis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: myredis
  name: myredis
  namespace: votingapp
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    run: myredis

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  generation: 2
  labels:
    run: mynginx
  name: mynginx
  namespace: votingapp
spec:
  replicas: 1
  selector:
    matchLabels:
      run: mynginx
  template:
    metadata:
      labels:
        run: mynginx
    spec:
      containers:
        - image: nginx
          name: mynginx
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config-volume
          configMap:
            name: mynginxconf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: mynginx
  name: mynginx
  namespace: votingapp
spec:
  ports:
    - nodePort: 30500
      port: 80
      targetPort: 80
  selector:
    run: mynginx
  type: NodePort
---
apiVersion: v1
data:
  nginx.conf: |-
    events { worker_connections 1024; }

    http {
        include /etc/nginx/mime.types;

        upstream voting{
            server myvotingapp;
        }

        server {
            listen 80;

            location / {
                proxy_pass         http://voting/;
                proxy_redirect     off;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Host $server_name;
            }

            location /ws {
                proxy_pass http://voting/ws;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
            }
        }
    }
kind: ConfigMap
metadata:
  name: mynginxconf
  namespace: votingapp
